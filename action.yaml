# Action's main info
name: "Packj Audit"
description: "Use Packj to identify malicious/risky Python PyPI, NPM, and RubyGems dependencies"

# Action's author name
author: "Ossillate, Inc."

# Action's branding data for GitHub Marketplace
branding:
  icon: "package" # icon name from Feather open source icons pack
  color: "orange"

on: [pull_request]

permissions:
  contents: read
  
inputs: 
#  OSSIEBOT_ID:
#    required: true
  REPO_TOKEN:
    required: true
  DEPENDENCY_FILES:
    required: true
    
runs:
  using: composite
  steps: 
    - name: Test vars
      if: ${{ false }}
      shell: bash
      run: |
        echo "HR == ${{ github.head_ref }}"
        echo ${{ github.ref_name }}
        echo ${{ github.base_ref }}
        if ${{ github.event_name }} == "pull_request"
        then 
          echo "PR=true" >> $GITHUB_ENV
        else
          echo "PR=false" >> $GITHUB_ENV
        fi
          
    # Install Packj tool
    - name: Checkout packj
      #if: ${{ false }}
      uses: actions/checkout@v3
      with:
        repository: sbmthakur/packj
        path: packj
        ref: html
    - name: Run deps with packj
      #if: ${{ false }}
      shell: bash
      run: |

        sudo apt install python3-testresources
        pip3 install -r packj/requirements.txt
        pip3 install --upgrade urllib3
        #cd packj
        
        IFS=',' read -ra DEPENDENCIES <<< ${{ inputs.DEPENDENCY_FILES }}
        input_files=()
        echo "---$DEPENDENCIES"
        
        for i in "${DEPENDENCIES[@]}"
          do 
            cp $i packj/
            filename=$(basename $i); 
            input_files+=$filename,
          done
        
        echo $input_files
        input_files=${input_files::-1}
        echo $input_files
        ls packj/
        cd packj/ && python3 main.py deps $input_files && cd ..
        echo "printing html file"
        
        echo "ISSUE_BODY<<EOF" >> $GITHUB_ENV
        echo "<h2> Packj security scan report </h2>" >> $GITHUB_ENV
        run_url="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        commit_link="${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}"
        echo "Created by <a href=$run_url>workflow run #${{ github.run_number }}</a> on commit <a href=$commit_link>${{ github.sha }}</a>"  >> $GITHUB_ENV
        for l in $(cat /tmp/deps.htm);
        do
          echo $l >> $GITHUB_ENV
        done
        
        #echo "$(head -n1 /tmp/deps.htm)" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV
        
        echo "ISSUE_TITLE=Risky packages found" >> $GITHUB_ENV
        
        cat /tmp/deps.htm
              
    - name: create issue if ISSUE_REQUIRED is set
      if: ${{ github.head_ref == '' }}
      #if: ${{ env.ISSUE_REQUIRED == 'YES'}}
      #if: ${{ false }}
      uses: rishabhgupta/git-action-issue@v2
      with:
        token: ${{ inputs.REPO_TOKEN }}
        title: ${{ env.ISSUE_TITLE }}
        body: ${{ env.ISSUE_BODY }}
        
    - name: Comment PR
      if: ${{ github.head_ref }}
      #if: ${{ false }}
      uses: thollander/actions-comment-pull-request@v1
      with:
        message: ${{ env.ISSUE_BODY }}
        GITHUB_TOKEN: ${{ inputs.REPO_TOKEN }}
